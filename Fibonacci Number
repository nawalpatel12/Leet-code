class Solution {
    Map<Integer,  Integer> cache = new HashMap<>(); 
    public int fib(int n) {
        if(n==0 || n==1){
            return n;
        }
        if(cache.containsKey(n)){
            return cache.get(n);

        }
        int result = fib(n-1) + fib(n-2);
        cache.put(n , result);
        return result;
    }
}


class Solution {
    public int fib(int n) {
        if(n<=1){
            return n;
        }
         // start with base case
        // maintain array
        int dp[] = new int[n + 1];
       // fill the base case
        dp[0] = 0;
        dp[1] = 1;
        for(int i =2; i<=n; i++){
            dp[i] = dp[i-1] + dp[i-2];
        }
        return dp[n];
    } 
}
